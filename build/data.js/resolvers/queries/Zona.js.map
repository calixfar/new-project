{"version":3,"sources":["../../../../src/data.js/resolvers/queries/Zona.js"],"names":["obtenerZonas","root","input","limit","offset","Zona","find","skip","obtenerZona","id","Promise","resolve","rejects","findById","error","zona"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,QAA+B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAZC,MAAY,QAAZA,MAAY;AACvD,SAAOC,WAAKC,IAAL,CAAU,EAAV,EAAcH,KAAd,CAAoBA,KAApB,EAA2BI,IAA3B,CAAgCH,MAAhC,CAAP;AACH,CAFM;;;;AAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACP,IAAD,SAAgB;AAAA,MAARQ,EAAQ,SAARA,EAAQ;AACvC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,OAAV,EAAsB;AACrCP,eAAKQ,QAAL,CAAcJ,EAAd,EAAkB,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAC/B,UAAKD,KAAL,EAAaF,OAAO,CAACE,KAAD,CAAP,CAAb,KACKH,OAAO,CAACI,IAAD,CAAP;AACR,KAHD;AAIH,GALM,CAAP;AAMH,CAPM","sourcesContent":["import {Zona} from './../../models/Zona'\r\nimport { resolve } from 'url';\r\nimport { rejects } from 'assert';\r\n\r\nexport const obtenerZonas = (root,{input,limit,offset}) => {\r\n    return Zona.find({}).limit(limit).skip(offset);\r\n}\r\n\r\nexport const obtenerZona = (root, {id}) => {\r\n    return new Promise((resolve, rejects) => {\r\n        Zona.findById(id, (error, zona) => {\r\n            if ( error ) rejects(error)\r\n            else resolve(zona)\r\n        })\r\n    })\r\n}"],"file":"Zona.js"}