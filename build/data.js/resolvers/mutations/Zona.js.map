{"version":3,"sources":["../../../../src/data.js/resolvers/mutations/Zona.js"],"names":["crearZona","root","input","console","log","nuevaZona","Zona","barrios","nombre","id","_id","Promise","resolve","rejects","save","error","actualizarZona","findOneAndUpdate","zona","eliminarZona","findById","map","idBarrio","Barrio","findByIdAndDelete","promise"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,QAAmB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAMG,SAAS,GAAI,IAAIC,UAAJ,CAAS;AACxBC,IAAAA,OAAO,EAAEL,KAAK,CAACK,OADS;AAExBC,IAAAA,MAAM,EAAEN,KAAK,CAACM;AAFU,GAAT,CAAnB;AAIAH,EAAAA,SAAS,CAACI,EAAV,GAAeJ,SAAS,CAACK,GAAzB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,OAAV,EAAsB;AACrCR,IAAAA,SAAS,CAACS,IAAV,CAAe,UAAAC,KAAK,EAAI;AACpB,UAAGA,KAAH,EAAUF,OAAO,CAACE,KAAD,CAAP,CAAV,KACKH,OAAO,CAACP,SAAD,CAAP;AACR,KAHD;AAIH,GALM,CAAP;AAMH,CAbM;;;;AAcA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACf,IAAD,SAAmB;AAAA,MAAXC,KAAW,SAAXA,KAAW;AACjD,SAAO,IAAIS,OAAJ,CAAY,UAACC,OAAD,EAAUC,OAAV,EAAsB;AACrCP,eAAKW,gBAAL,CAAsB;AAACP,MAAAA,GAAG,EAAER,KAAK,CAACO;AAAZ,KAAtB,EAAuCP,KAAvC,EAA8C;AAAC,aAAK;AAAN,KAA9C,EAA2D,UAACa,KAAD,EAAQG,IAAR,EAAiB;AACxE,UAAGH,KAAH,EAAUF,OAAO,CAACE,KAAD,CAAP,CAAV,KACKH,OAAO,CAACM,IAAD,CAAP;AACR,KAHD;AAIH,GALM,CAAP;AAMC,CAPM;;;;AAQA,IAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOlB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcQ,YAAAA,EAAd,SAAcA,EAAd;AACxBN,YAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ;AADwB;AAAA,mBAEPH,WAAKc,QAAL,CAAc;AAACV,cAAAA,GAAG,EAAED;AAAN,aAAd,CAFO;;AAAA;AAEpBS,YAAAA,IAFoB;AAGxB;AACAA,YAAAA,IAAI,CAACX,OAAL,CAAac,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAiB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACOC,eAAOC,iBAAP,CAAyB;AAACd,0BAAAA,GAAG,EAAED;AAAN,yBAAzB,CADP;;AAAA;AACTgB,wBAAAA,OADS;AAAA,yDAENA,OAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjB;;AAAA;AAAA;AAAA;AAAA,iBAJwB,CAQxB;AACA;AACA;AACA;AACA;AACA;;AAbwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import {Zona} from '../../models/Zona'\r\nimport {Barrio} from '../../models/Barrio'\r\n\r\nimport mongoose from 'mongoose'\r\nexport const crearZona = (root, {input}) => {\r\n    console.log(input)\r\n    const nuevaZona =  new Zona({\r\n        barrios: input.barrios,\r\n        nombre: input.nombre,\r\n    });\r\n    nuevaZona.id = nuevaZona._id;\r\n    return new Promise((resolve, rejects) => {\r\n        nuevaZona.save(error => {\r\n            if(error) rejects(error)\r\n            else resolve(nuevaZona)\r\n        })\r\n    })\r\n}\r\nexport const actualizarZona = (root, {input}) => {\r\nreturn new Promise((resolve, rejects) => {\r\n    Zona.findOneAndUpdate({_id: input.id}, input, {new: true} ,(error, zona) => {\r\n        if(error) rejects(error)\r\n        else resolve(zona)\r\n    })\r\n})\r\n}\r\nexport const eliminarZona = async (root, {id}) => {\r\n    console.log(id)\r\n    let zona = await Zona.findById({_id: id});\r\n    // console.log('ziba',zona)\r\n    zona.barrios.map(async idBarrio => {\r\n        let promise = await Barrio.findByIdAndDelete({_id: id})\r\n        return promise;\r\n    })\r\n    // return new Promise((resolve, rejects) => {\r\n    //     Zona.findOneAndDelete({_id : id}, (error) => {\r\n    //         if (error) rejects(error)\r\n    //         else resolve('Se elimino correctamente')\r\n    //     })\r\n    // })\r\n};\r\n\r\n"],"file":"Zona.js"}