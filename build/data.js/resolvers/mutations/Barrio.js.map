{"version":3,"sources":["../../../../src/data.js/resolvers/mutations/Barrio.js"],"names":["crearBarrio","root","input","id","nuevoBarrio","Barrio","nombre","cantidadVotantes","metaVotos","zona","estado","_id","Promise","resolve","rejects","update","Zona","updateOne","$push","barrios","error","save","findByIdAndUpdate","barrio","eliminarBarrio","Persona","find","persons","promises","map","person","mongoose","Types","ObjectId","$unset","all","console","log","$pull","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Barrio from './../../models/Barrio'\r\nimport { resolve } from 'dns';\r\nimport { rejects } from 'assert';\r\nimport mongoose, { mongo } from 'mongoose';\r\nimport { Zona } from '../../models/Zona';\r\nimport Persona from '../../models/Persona';\r\n\r\nexport const crearBarrio = (root, {input}) => {\r\n    if(!input.id){\r\n        const nuevoBarrio = new Barrio({\r\n            nombre: input.nombre,\r\n            cantidadVotantes: input.cantidadVotantes,\r\n            metaVotos: input.metaVotos,\r\n            zona: input.zona,\r\n            estado : input.estado\r\n        })\r\n        nuevoBarrio.id = nuevoBarrio._id;\r\n        return new Promise((resolve, rejects) => {\r\n            const update = {'id': nuevoBarrio._id};\r\n            Zona.updateOne({_id: input.zona}, {$push: {barrios: update}}, (error) => {\r\n                if(error) rejects(error)\r\n                else 'removido'\r\n            })\r\n            nuevoBarrio.save((error) => {\r\n                if( error ) rejects(error)\r\n                else resolve(nuevoBarrio)\r\n            })\r\n        })\r\n    }\r\n    else {\r\n        return new Promise((resolve, rejects) => {\r\n            Barrio.findByIdAndUpdate({_id: input.id}, input, {new: true}, (error, barrio) => {\r\n                if(error) rejects(error)\r\n                else resolve(barrio)\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport const eliminarBarrio = async (root, {input}) => {\r\n    let persons = await Persona.find({barrio: input.barrio})\r\n    let promises = persons.map( async (person) => {\r\n        return Persona.findByIdAndUpdate({_id: mongoose.Types.ObjectId(person.id)}, {$unset: {'barrio': ''}})\r\n    })\r\n    Promise.all(promises)\r\n    //Persona.updateMany({barrio: mongoose.Types.ObjectId(input.barrio)},{$unset: {barrio: ''}}, {multi: true})\r\n    return new Promise((resolve, rejects) => {\r\n        const update = {'id': input.barrio}\r\n        console.log('update',update)\r\n        Zona.update({_id: input.zona},{$pull: {barrios: {'id' : mongoose.Types.ObjectId(input.barrio)}}}, (error) => {\r\n            if(error) rejects(error)\r\n        })\r\n        Barrio.findByIdAndDelete({_id: input.barrio}, (error) => {\r\n            if(error) rejects(error)\r\n            else resolve('Se elemino correctamente')\r\n        })\r\n    })\r\n}\r\n"],"file":"Barrio.js"}