{"version":3,"sources":["../../../../src/data.js/resolvers/mutations/Usuario.js"],"names":["dotenv","config","path","crearToken","usuarioLogin","secreto","expiresIn","usuario","jwt","sign","crearUsuario","root","password","nombre","rol","Usuario","findOne","existeUsuario","Error","active","save","nuevoUsuario","autenticarUsuario","nombreUsuario","bcrypt","compare","passwordCorrecto","token","process","env","SECRETO"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AADAA,mBAAOC,MAAP,CAAc;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAd;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAeC,OAAf,EAAwBC,SAAxB,EAAsC;AAAA,MAC9CC,OAD8C,GACnCH,YADmC,CAC9CG,OAD8C;AAErD,SAAOC,yBAAIC,IAAJ,CAAS;AAACF,IAAAA,OAAO,EAAPA;AAAD,GAAT,EAAmBF,OAAnB,EAA2B;AAACC,IAAAA,SAAS,EAATA;AAAD,GAA3B,CAAP;AACH,CAHD;;AAKO,IAAMI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAaJ,YAAAA,OAAb,QAAaA,OAAb,EAAqBK,QAArB,QAAqBA,QAArB,EAA+BC,MAA/B,QAA+BA,MAA/B,EAAuCC,GAAvC,QAAuCA,GAAvC;AAAA;AAAA,mBACIC,oBAAQC,OAAR,CAAgB;AAACT,cAAAA,OAAO,EAAPA;AAAD,aAAhB,CADJ;;AAAA;AAClBU,YAAAA,aADkB;;AAAA,iBAErBA,aAFqB;AAAA;AAAA;AAAA;;AAAA,kBAGd,IAAIC,KAAJ,CAAU,sBAAV,CAHc;;AAAA;AAAA;AAAA,mBAKG,IAAIH,mBAAJ,CAAY;AACnCR,cAAAA,OAAO,EAAPA,OADmC;AAEnCK,cAAAA,QAAQ,EAARA,QAFmC;AAGnCC,cAAAA,MAAM,EAANA,MAHmC;AAInCC,cAAAA,GAAG,EAAHA,GAJmC;AAKnCK,cAAAA,MAAM,EAAE;AAL2B,aAAZ,EAMxBC,IANwB,EALH;;AAAA;AAKlBC,YAAAA,YALkB;AAAA,6CAYjB,sBAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZX,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAcA,IAAMY,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOX,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcJ,YAAAA,OAAd,SAAcA,OAAd,EAAuBK,QAAvB,SAAuBA,QAAvB;AAAA;AAAA,mBACDG,oBAAQC,OAAR,CAAgB;AAACT,cAAAA,OAAO,EAAPA;AAAD,aAAhB,CADC;;AAAA;AACvBgB,YAAAA,aADuB;;AAAA,gBAEzBA,aAFyB;AAAA;AAAA;AAAA;;AAAA,kBAGnB,IAAIL,KAAJ,CAAU,8CAAV,CAHmB;;AAAA;AAAA;AAAA,mBAKEM,mBAAOC,OAAP,CAAeb,QAAf,EAAyBW,aAAa,CAACX,QAAvC,CALF;;AAAA;AAKvBc,YAAAA,gBALuB;;AAAA,gBAMzBA,gBANyB;AAAA;AAAA;AAAA;;AAAA,kBAOnB,IAAIR,KAAJ,CAAW,8CAAX,CAPmB;;AAAA;AAAA,8CAStB;AACHS,cAAAA,KAAK,EAAExB,UAAU,CAACoB,aAAD,EACbK,OAAO,CAACC,GAAR,CAAYC,OADC,EACO,KADP;AADd,aATsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBR,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import Usuario from './../../models/Usuario'\r\nimport bcrypt from 'bcrypt'\r\nimport dotenv from 'dotenv'\r\ndotenv.config({path: 'variables.env'})\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst crearToken = (usuarioLogin, secreto, expiresIn) => {\r\n    const {usuario} = usuarioLogin;\r\n    return jwt.sign({usuario},secreto,{expiresIn});\r\n}\r\n\r\nexport const crearUsuario = async (root,{usuario,password, nombre, rol}) => {\r\n    const existeUsuario = await Usuario.findOne({usuario})\r\n    if(existeUsuario){\r\n        throw new Error('El usuario ya existe')\r\n    }\r\n    const nuevoUsuario = await new Usuario({\r\n        usuario,\r\n        password,\r\n        nombre,\r\n        rol,\r\n        active: false \r\n    }).save()\r\n    return 'Creado correctamente';\r\n}\r\nexport const autenticarUsuario = async (root, {usuario, password}) => {\r\n    const nombreUsuario = await Usuario.findOne({usuario})\r\n    if(!nombreUsuario){\r\n        throw new Error('El usuario o la contrase침a est치n incorrectos')\r\n    }\r\n    const passwordCorrecto = await bcrypt.compare(password, nombreUsuario.password)\r\n    if(!passwordCorrecto){\r\n        throw new Error( 'El usuario o la contrase침a est치n incorrectos');\r\n    }\r\n    return {\r\n        token: crearToken(nombreUsuario,\r\n            process.env.SECRETO,'1hr')\r\n    }\r\n}"],"file":"Usuario.js"}